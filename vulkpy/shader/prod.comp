#version 460
layout(local_size_x = 64) in;


layout(push_constant) uniform constants {
  uint size[2];
} params;


layout(std430, binding = 0) readonly buffer A {
  float a[];
};
layout(std430, binding = 1) writeonly buffer B {
  float b[];
};


void main(){
  uint i = gl_GlobalInvocationID.x;
  uint sizeA = params.size[0];
  uint sizeB = params.size[1];
  if(i >= sizeB){ return; }

  float partial_prod = 1.0f;
  for(uint j = i; j < sizeA; j += sizeB){
    partial_prod *= a[j];
  }

  b[i] = partial_prod;
}
