#version 460
layout(local_size_x = 1, local_size_y = 64, local_size_z = 1) in;


layout(push_constant) uniform constants {
  uint prev_prod; // Global x
  uint post_prod; // Global y
  uint axis_size;
  uint index_size;// Global z
} params;


layout(std430, binding = 0) readonly buffer A {
  float a[]; // [prev..., axis_size, post...]
};
layout(std430, binding = 1) readonly buffer B {
  uint b[]; // axis_size
};
layout(std430, binding = 2) writeonly buffer C {
  float c[]; // [index_size, prev..., post...]
};


void main(){
  const uint i = gl_GlobalInvocationID.x;
  const uint j = gl_GlobalInvocationID.y;
  const uint k = gl_GlobalInvocationID.z;
  if((i >= params.prev_prod) || (j >= params.post_prod) || (k >= params.index_size)){
    return;
  }

  const uint a_idx =
    i    * params.axis_size * params.post_prod +
    b[k] * params.post_prod +
    j;
  const uint c_idx =
    k * params.prev_prod * params.post_prod +
    i * params.post_prod +
    j;

  c[c_idx] = a[a_idx];
}
